# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Build edgetts-cli 

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'

    - name: Set up FFmpeg
      run: |
        sudo apt-get update
        sudo apt-get install -y ffmpeg
        
    #- name: Build
    #  run: |
    #    chmod +x build.sh
    #    ./build.sh
               
    - name: Check and init Go module
      run: |
        if [ ! -f go.mod ]; then
          go mod init edgetts-cli
        fi

    - name: Get dependencies
      run: |
        go get github.com/jing332/tts-server-go/tts/edge
        
    - name: Build for Windows
      run: |
        GOOS=windows GOARCH=amd64 go build -ldflags="-s -w" -o edgetts.exe
      working-directory: ${{ github.workspace }}

    - name: List all cruuent files and directories
      run: ls -R

    - name: Check file existence
      run: |
        if [ ! -f "${{ github.workspace }}/edgetts.exe" ]; then
          echo "File not found: edgetts.exe"
          exit 1
        fi
      
    - name: Set date variable
      run: |
        $date = Get-Date -Format "yyyyMMdd"
        echo "ARTIFACT_NAME=edgetts_$date" | Out-File -FilePath $env:GITHUB_ENV -Encoding UTF8 -Append
      shell: pwsh
    
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.ARTIFACT_NAME }}
        path: ${{ github.workspace }}/edgetts.exe
